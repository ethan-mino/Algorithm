// Created by 길민호 on 2022/07/05.

#include <bits/stdc++.h>
using namespace std;

int d[1010][1010];  // dist[a_st][b_st]는 두 문자열 a[s_st:], b[b_st:]의 LCS의 길이를 나타냄
string a, b;

int LCS(int a_st, int b_st){

    int& ret = d[a_st][b_st];

    if(ret != 0) return ret;
    if(a_st >= a.size()|| b_st >= b.size()) return 0;

    ret = INT_MIN;
    for(int i = b_st; i < b.size(); i++){
        if(a[a_st] == b[i]){
            ret = max(ret, LCS(a_st + 1, i + 1) + 1);
            break;
        }
    }

    ret = max(ret, LCS(a_st + 1, b_st));
    return ret;
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> a >> b;
    cout << LCS(0, 0) << "\n";
}

/*
BCDAYCKP
CAPCAK

B
CAPCAK
-> 0

CAPCAK
CAPCAK
-> 6



-> 1000

AAAAA
AAAAAA
-> 5
*/